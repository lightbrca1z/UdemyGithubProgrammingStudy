datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  UserID      Int                  @id @default(autoincrement())
  Name        String               @db.VarChar(100)
  Email       String               @unique @db.VarChar(255)
  PasswordHash String              @db.VarChar(255)
  CreatedAt   DateTime             @default(now())
  User_BusinessCards User_BusinessCard[]
}

model Category {
  CategoryID     Int                @id @default(autoincrement())
  CategoryName   String             @unique @db.VarChar(100)   // ✅ @unique OK
  BusinessCards  BusinessCard[]
}

model Organization {
  OrganizationID   Int              @id @default(autoincrement())
  OrganizationName String           @unique @db.VarChar(255)   // ✅ @unique OK
  BusinessCards    BusinessCard[]   @relation("Organization1")
  BusinessCards2   BusinessCard[]   @relation("Organization2")
}

model Representative {
  RepresentativeID   Int            @id @default(autoincrement())
  RepresentativeName String         @unique @db.VarChar(100)   // ✅ @unique OK
  BusinessCards      BusinessCard[]
}

model Region {
  RegionID     Int                  @id @default(autoincrement())
  RegionName   String               @unique @db.VarChar(100)   // ✅ @unique OK
  BusinessCards BusinessCard[]
}

model BusinessCard {
  BusinessCardID     Int             @id @default(autoincrement())
  CategoryID         Int?
  OrganizationID     Int?
  OrganizationID2    Int?
  RepresentativeID   Int?
  Phone              String?         @db.VarChar(20)
  Mobile             String?         @db.VarChar(20)
  Fax                String?         @db.VarChar(20)
  Email              String?         @db.VarChar(255)
  RegionID           Int?
  Address            String?
  Notes              String?
  ImageURL           String?
  CreatedAt          DateTime        @default(now())

  Category           Category?       @relation(fields: [CategoryID], references: [CategoryID])
  Organization       Organization?   @relation("Organization1", fields: [OrganizationID], references: [OrganizationID])
  Organization2      Organization?   @relation("Organization2", fields: [OrganizationID2], references: [OrganizationID])
  Representative     Representative?@relation(fields: [RepresentativeID], references: [RepresentativeID])
  Region             Region?         @relation(fields: [RegionID], references: [RegionID])
  User_BusinessCards User_BusinessCard[]
}

model User_BusinessCard {
  UserID         Int
  BusinessCardID Int
  CreatedAt      DateTime          @default(now())

  User           User              @relation(fields: [UserID], references: [UserID])
  BusinessCard   BusinessCard      @relation(fields: [BusinessCardID], references: [BusinessCardID])

  @@id([UserID, BusinessCardID])
}
